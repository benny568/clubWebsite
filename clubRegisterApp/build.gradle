/*
 * 
 */
 
 buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.0'
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'

// JDK version source compatibility
// sourceCompatibility = 1.7
// project version
version = '1.0'
// War file name
war.baseName = 'cws'
// Web directory, this overrides the default value "webapp"
project.webAppDirName = 'WebContent'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    //mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.springframework:spring-core:4.1.6.RELEASE'
    compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
    compile 'org.springframework:spring-orm:4.1.6.RELEASE'
    compile 'org.springframework:spring-aspects:4.1.6.RELEASE'
    compile 'org.springframework.security:spring-security-web:4.0.3.RELEASE'
    compile 'org.springframework.security:spring-security-config:4.0.3.RELEASE'
    compile 'org.springframework.security:spring-security-taglibs:4.0.3.RELEASE'
    compile 'jstl:jstl:1.2'
    compile 'mysql:mysql-connector-java:5.1.31'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.slf4j:jcl-over-slf4j:1.7.12'
    compile 'log4j:log4j:1.2.17'
    compile 'javax.servlet:servlet-api:3.0-alpha-1'
    compile 'javax.mail:javax.mail-api:1.5.3'
    compile 'com.google.code.gson:gson:2.2.4'
    
	compile 'org.apache.tomcat:tomcat-catalina:7.0.47'
	compile 'org.apache.tomcat:tomcat-coyote:7.0.47'
	compile 'org.apache.tomcat.embed:tomcat-embed-core:7.0.47'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
