{"version":3,"sources":["services/session-data.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAoBA;gBAwBK,4BAAoC,GAAkB,EAAU,KAAW;oBAAvC,QAAG,GAAH,GAAG,CAAe;oBAAU,UAAK,GAAL,KAAK,CAAM;oBArB5E,UAAK,GAAG,EAAE,KAAK,EAAC,CAAC,EAAE,MAAM,EAAC,CAAC,EAAC,CAAC;oBAG7B,kBAAa,GAAG,EAAE,CAAC;oBAYnB,aAAQ,GAAG,CAAC,CAAC;oBACb,WAAM,GAAG,EAAE,CAAC;oBACZ,gBAAW,GAAG,oBAAoB,CAAC;oBACnC,kBAAa,GAAG,KAAK,CAAC;oBACtB,mBAAc,GAAG,KAAK,CAAC;oBAGrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;oBAE5D,IAAI,GAAG,GAAG,IAAI,wBAAU,EAAE,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,aAAa,EAAE,CAAC;oBAC7C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,IAAI,CAAC,UAAU,GAAG,CAAE,SAAS;wBACT,YAAY;wBACZ,WAAW;wBACX,aAAa;wBACb,WAAW;wBACX,KAAK;wBACL,QAAQ;wBACR,SAAS;wBACT,UAAU;wBACV,WAAW;wBACX,WAAW;wBACX,KAAK;wBACL,WAAW,CAAC,CAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,IAAI,gBAAI,EAAE,CAAC;oBAChC,IAAI,CAAC,aAAa,GAAG,IAAI,WAAI,EAAE,CAAC;oBAChC,IAAI,CAAC,eAAe,GAAG,IAAI,eAAM,EAAE,CAAC;oBACpC,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,EAAQ,CAAC;oBACjC,sCAAsC;oBACtC,IAAI,CAAC,aAAa,GAAG,IAAI,gBAAI,EAAE,CAAC;oBAChC,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,EAAU,CAAC;oBACxC,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAa,CAAC;oBAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,EAAW,CAAC;gBAE3C,CAAC;gBAED;;;;;;4EAM4D;gBAC3D,6CAAgB,GAAhB,UAAkB,MAAa;oBAE3B,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,oBAAoB,CAAC,CAAC;oBAC1C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;oBAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC9B,CAAC;gBAEF;;;;;;;4EAO4D;gBAC5D,0CAAa,GAAb,UAAc,MAAM,EAAE,MAAM;oBAExB,IAAI,IAAI,GAAG,EAAE,CAAC;oBACd,IAAI,KAAK,GAAG,KAAK,CAAC;oBAClB,IAAI,KAAK,GAAG,CAAC,CAAC;oBAEd,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,gBAAgB,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC,CAAC;oBAEpE,EAAE,CAAC,CAAE,OAAO,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,SAAU,CAAC,CAC1D,CAAC;wBACG,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC;oBAED,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EACzD,CAAC;wBACG,EAAE,CAAC,CAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,YAAa,CAAC,CACnD,CAAC;4BACG,4CAA4C;4BAC5C,2DAA2D;4BAC9D,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,MAAM,GAAG,QAAQ,CAAC,CAAC;4BACnD,MAAM,CAAC,IAAI,CAAC;wBAChB,CAAC;oBACL,CAAC;oBACD,MAAM,CAAC,CAAE,MAAO,CAAC,CACjB,CAAC;wBACG,KAAK,aAAa;4BACd,IAAI,GAAG,MAAM,CAAC;4BACd,8CAA8C;4BAC9C,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EACrE,CAAC;gCACG,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAC7C,CAAC;oCACG,EAAE,CAAC,CAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAE,CAAC,CACtE,CAAC;wCACG,KAAK,GAAG,CAAC,CAAC;wCACV,KAAK,CAAC;oCACV,CAAC;gCACL,CAAC;gCAED,EAAE,CAAC,CAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,IAAK,CAAC,CACxC,CAAC;oCACG,EAAE,CAAC,CAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAE,CAAC,CACxD,CAAC;wCACG,KAAK,GAAG,IAAI,CAAC;wCACb,KAAK,CAAC;oCACV,CAAC;gCACL,CAAC;4BACL,CAAC;4BACD,KAAK,CAAC;wBAEV,KAAK,UAAU,CAAC;wBAChB,KAAK,WAAW;4BACZ,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EACzD,CAAC;gCACG,EAAE,CAAC,CAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,YAAa,CAAC,CACnD,CAAC;oCACG,4CAA4C;oCAC5C,KAAK,GAAG,IAAI,CAAC;oCACb,KAAK,CAAC;gCACV,CAAC;gCAAC,IAAI,CAAC,EAAE,CAAC,CAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,gBAAiB,CAAC,CAC9D,CAAC;oCACG,KAAK,GAAG,IAAI,CAAC;oCACb,KAAK,CAAC;gCACV,CAAC;4BACL,CAAC;4BACD,KAAK,CAAC;wBACV,KAAK,UAAU;4BACX,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EACzD,CAAC;gCACG,EAAE,CAAC,CAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,YAAa,CAAC,CACnD,CAAC;oCACG,4CAA4C;oCAC5C,KAAK,GAAG,IAAI,CAAC;oCACb,KAAK,CAAC;gCACV,CAAC;gCAAC,IAAI,CAAC,EAAE,CAAC,CAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,eAAgB,CAAC,CAC7D,CAAC;oCACG,KAAK,GAAG,IAAI,CAAC;oCACb,KAAK,CAAC;gCACV,CAAC;4BACL,CAAC;4BACD,KAAK,CAAC;wBAEV,KAAK,UAAU,CAAC;wBAChB,KAAK,WAAW,CAAC;wBACjB,KAAK,aAAa,CAAC;wBACnB,KAAK,YAAY;4BACb,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EACzD,CAAC;gCACI,EAAE,CAAC,CAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,YAAa,CAAC,CACpD,CAAC;oCACG,4CAA4C;oCAC5C,KAAK,GAAG,IAAI,CAAC;oCACb,KAAK,CAAC;gCACV,CAAC;4BACL,CAAC;4BACD,KAAK,CAAC;oBACd,CAAC;oBAED,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAED;;;;;;;4EAO4D;gBAC5D,uCAAU,GAAV,UAAW,EAAE,EAAE,EAAE;oBAEhB,IAAI,IAAI,GAAG,KAAK,CAAC;oBACjB,MAAM,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE,KAAK;wBAC9D,EAAE,CAAC,CAAE,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,CAAE,CAAC,CAC1B,CAAC;4BACE,IAAI,GAAG,IAAI,CAAC;wBACf,CAAC;oBACF,CAAC,CAAC,CAAC;oBAEH,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAEE;;;;;;;4EAO4D;gBAC5D,8CAAiB,GAAjB,UAAkB,OAAO,EAAE,MAAM;oBAEnC,IAAI,KAAK,GAAU,kBAAkB,CAAC,eAAe,CAAE,OAAO,EAAE,MAAM,CAAE,CAAC;oBAEzE,EAAE,CAAC,CAAE,KAAK,KAAK,CAAC,CAAE,CAAC,CACnB,CAAC;wBACA,MAAM,CAAC;oBACR,CAAC;oBAED,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;oBAClC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;oBACxC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;oBACpC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;oBAChC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;oBACpC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;oBACtC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;oBAClC,OAAO,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;oBAC1C,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;oBAChC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;oBACxC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;oBAC5C,OAAO,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;oBAC1C,OAAO,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;oBAC1C,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;oBACtC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;oBACpC,OAAO,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBACjD,CAAC;gBAEE;;;;;;;4EAO4D;gBAC5D,2CAAc,GAAd,UAAgB,OAAO,EAAE,MAAM;oBAEjC,IAAI,KAAK,GAAU,kBAAkB,CAAC,eAAe,CAAE,OAAO,EAAE,MAAM,CAAE,CAAC;oBAEzE,EAAE,CAAC,CAAE,KAAK,KAAK,CAAC,CAAE,CAAC,CACnB,CAAC;wBACA,MAAM,CAAC;oBACR,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC,CACxB,CAAC;wBACG,OAAO,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;oBAC/B,CAAC;gBACF,CAAC;gBAEE;;;;;;;4EAO4D;gBAC5D,2CAAc,GAAd,UAAgB,OAAO,EAAE,MAAM;oBAEjC,EAAE,CAAC,CAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,SAAU,CAAC,CACpD,CAAC;oBAED,CAAC;oBAED,IAAI,KAAK,GAAG,kBAAkB,CAAC,eAAe,CAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAE,CAAC;oBAE1F,EAAE,CAAC,CAAE,KAAK,KAAK,CAAC,CAAE,CAAC,CACnB,CAAC;wBACG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;oBACxC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC,CACxB,CAAC;oBAED,CAAC;gBACF,CAAC;gBAEE;;;;;;;4EAO4D;gBAC5D,4CAAe,GAAf,UAAiB,KAAK,EAAE,QAAQ;oBAE5B,IAAI,KAAK,GAAU,CAAC,CAAC,CAAC;oBAEtB,EAAE,CAAC,CAAE,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAE,CAAC,CAChC,CAAC;wBACG,IAAI,CAAC,UAAU,EAAE,CAAC;oBACtB,CAAC;oBAGD,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAC7C,CAAC;wBACG,EAAE,CAAC,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAG,CAAC,CACzC,CAAC;4BACG,KAAK,GAAG,CAAC,CAAC;4BACV,KAAK,CAAC;wBACV,CAAC;oBACL,CAAC;oBAED,EAAE,CAAC,CAAE,KAAK,KAAK,CAAC,CAAE,CAAC,CACnB,CAAC;oBAED,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC,CACxB,CAAC;wBACG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;oBAEnC,CAAC;gBACL,CAAC;gBAED;;;;;;;4EAO4D;gBACrD,kCAAe,GAAtB,UAAwB,OAAO,EAAE,MAAM;oBAEzC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;oBAEf,EAAE,CAAC,CAAE,OAAO,OAAO,KAAK,SAAU,CAAC,CACnC,CAAC;wBACA,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EACxC,CAAC;4BACA,EAAE,CAAC,CAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,EAAG,CAAC,CAClC,CAAC;gCACA,KAAK,GAAG,CAAC,CAAC;gCACV,KAAK,CAAC;4BACP,CAAC;wBACF,CAAC;oBACF,CAAC;oBAED,MAAM,CAAC,KAAK,CAAC;gBACd,CAAC;gBAEE;;;;;;;4EAO4D;gBAC5D,4CAAe,GAAf,UAAiB,IAAI;oBAEvB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACtC,CAAC;gBAEE;;;;;;4EAM4D;gBAC5D,6CAAgB,GAAhB,UAAkB,KAAY;oBAEhC,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAC7C,CAAC;wBACA,EAAE,CAAC,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,KAAM,CAAC,CACrC,CAAC;4BACA,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;wBAC3B,CAAC;oBACF,CAAC;oBACD,MAAM,CAAC,CAAC,CAAC;gBACV,CAAC;gBAEE;;;;;;4EAM4D;gBAC5D,iDAAoB,GAApB,UAAsB,QAAgB;oBAErC,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,uBAAuB,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;oBAE3D,+CAA+C;oBAC/C,EAAE,CAAC,CAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAE,CAAC,CAC9B,CAAC;wBACG,IAAI,CAAC,UAAU,EAAE,CAAC;oBACtB,CAAC;oBAED,mDAAmD;oBACnD,GAAG,CAAC,CAAc,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAa,CAAC;wBAA1B,IAAI,IAAI,SAAA;wBAEV,EAAE,CAAC,CAAE,IAAI,CAAC,IAAI,KAAK,QAAS,CAAC,CAAC,CAAC;4BAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;4BAC1B,OAAO,CAAC,GAAG,CAAE,KAAK,GAAG,sCAAsC,GAAG,QAAQ,CAAC,CAAC;4BACxE,KAAK,CAAC;wBACV,CAAC;qBACJ;gBACL,CAAC;gBAED;;;;;;4EAM4D;gBAC5D,4CAAe,GAAf;oBAEI,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,qBAAqB,CAAC,CAAC;oBAC3C,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAEzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,GAAG,GAAG,UAAU,CAAE;yBACjC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;oBACrC;;;;wBAII;gBACX,CAAC;gBAEF,oCAAO,GAAP,UAAS,IAAI;oBAEZ,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,qCAAqC,GAAG,IAAI,CAAC,CAAC;oBACjE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC3B,CAAC;gBAEO,wCAAW,GAAnB,UAAqB,KAAU;oBAC3B,oEAAoE;oBACpE,8DAA8D;oBAC9D,IAAI,MAAM,GAAG,CAAE,KAAK,CAAC,OAAO,CAAE,GAAG,KAAK,CAAC,OAAO;wBAC5C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;oBAC1E,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,yBAAyB;oBAChD,kCAAkC;gBACpC,CAAC;gBAEH;;;;;;;4EAO4D;gBAC5D,oCAAO,GAAP;oBAEI,IAAI,KAAY,CAAC;oBACjB,qCAAqC;oBACrC,EAAE,CAAC,CAAE,IAAI,CAAC,iBAAiB,KAAK,IAAI,CAAC,KAAK,CAAC,KAAM,CAAC,CAClD,CAAC;wBACG,8CAA8C;wBAC9C,KAAK,GAAG,uCAAuC,CAAC;oBAEpD,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAE,IAAI,CAAC,iBAAiB,KAAK,IAAI,CAAC,KAAK,CAAC,MAAO,CAAC,CAC1D,CAAC;wBACA,+CAA+C;wBAC5C,KAAK,GAAG,4BAA4B,CAAC;oBACzC,CAAC;oBAED,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAED;;;;;;4EAM4D;gBAC5D,uCAAU,GAAV;oBAAA,iBAWE;oBATE,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,iBAAiB,CAAC,CAAC;oBACvC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAEzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,GAAG,GAAG,QAAQ,CAAE;yBAC3C,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;yBAChC,SAAS,CAAE,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAArB,CAAqB,EACtC,UAAA,GAAG,IAAK,OAAA,OAAO,CAAC,KAAK,CAAC,+CAA+C,CAAC,EAA9D,CAA8D,EACtE,cAAQ,OAAA,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,EAAlD,CAAkD,CAC1D,CAAC;gBACF,CAAC;gBAEF;;;;;;4EAM4D;gBAC5D,uCAAU,GAAV,UAAY,IAAI;oBAEX,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,cAAc,CAAC,CAAC;oBACpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACxB,CAAC;gBAEF;;;;;;4EAM4D;gBAC5D,kDAAqB,GAArB,UAAuB,QAAe;oBAAtC,iBAgBC;oBAdA,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,wBAAwB,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;oBAG5D,wCAAwC;oBACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAEzB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,GAAG,GAAG,QAAQ,GAAG,QAAQ,CAAE;yBACrC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;yBAChC,SAAS,CAAE,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,aAAa,GAAG,IAAI,EAAzB,CAAyB,EAClD,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,iDAAiD,GAAG,QAAQ,CAAC,EAAzE,CAAyE,EAClF,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,2CAA2C,GAAG,QAAQ,CAAC,EAAnE,CAAmE,CACvE,CAAC;gBAEP,CAAC;gBAED;;;;;;;4EAO4D;gBAC5D,8DAAiC,GAAjC,UAAmC,QAAe,EAAE,MAAc;oBAEjE,IAAI,MAAM,GAAW,EAAE,CAAC;oBAExB,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EACtC,CAAC;wBACA,MAAM,IAAI,GAAG,CAAC;oBACf,CAAC;oBACE,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,GAAG,oCAAoC,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;oBAGrF,wCAAwC;oBACxC,4BAA4B;oBAC5B,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAEzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,GAAG,GAAG,QAAQ,GAAG,QAAQ,CAAE;yBAC1C,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;gBAE7C,CAAC;gBAED;;;;;;4EAM4D;gBAC5D,qEAAwC,GAAxC,UAA0C,QAAgB,EAAE,MAAc;oBAEzE,IAAI,MAAM,GAAW,EAAE,CAAC;oBAExB,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EACtC,CAAC;wBACA,MAAM,IAAI,GAAG,CAAC;oBACf,CAAC;oBACE,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,GAAG,+BAA+B,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;oBAEjF,wCAAwC;oBACvC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;oBAC9B,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAE1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,GAAG,GAAG,eAAe,GAAG,QAAQ,CAAE;yBAClD,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;gBAC3C,CAAC;gBAED;;;;;;4EAM4D;gBAC5D,yDAA4B,GAA5B,UAA8B,QAAe;oBAA7C,iBAoBC;oBAlBG,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,+BAA+B,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;oBAEvE,EAAE,CAAC,CAAE,CAAE,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,CAAE,IAAI,CAAE,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,QAAQ,CAAG,CAAC,CACtF,CAAC;wBACG,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,0BAA0B,GAAG,2CAA2C,CAAC,CAAC;wBAC9F,MAAM,CAAC;oBACX,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,wCAAwC;wBACvC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;wBAC9B,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;wBAE1B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,GAAG,GAAG,eAAe,GAAG,QAAQ,CAAE;6BAC5C,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;6BAChC,SAAS,CAAE,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,aAAa,GAAG,IAAI,EAAzB,CAAyB,EACpD,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,iDAAiD,GAAG,QAAQ,CAAC,EAAzE,CAAyE,EAClF,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,+CAA+C,GAAG,QAAQ,CAAC,EAAvE,CAAuE,CAC3E,CAAC;oBACJ,CAAC;gBACL,CAAC;gBAED,4CAA4C;gBAC5C,8CAAiB,GAAjB,UAAmB,QAAe;oBAC9B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,8CAA8C;gBAC7E,CAAC;gBAED;;;;;;4EAM4D;gBAC5D,gDAAmB,GAAnB;oBAEI,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,uBAAuB,CAAC,CAAC;oBAE7C,IAAI,CAAC,UAAU,GAAG,CAAE,EAAC,IAAI,EAAC,iBAAiB,EAAE,KAAK,EAAC,oCAAoC,EAAC;wBACpE,EAAC,IAAI,EAAC,qBAAqB,EAAE,KAAK,EAAE,2CAA2C,EAAC;wBAChF,EAAC,IAAI,EAAC,YAAY,EAAE,KAAK,EAAE,iCAAiC,EAAC;qBAChE,CAAC;oBAClB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC3B,CAAC;gBAED;;;;;;4EAM4D;gBAC5D,+CAAkB,GAAlB;oBAEI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAChC,CAAC;gBAED;;;;;;4EAM4D;gBAC5D,6CAAgB,GAAhB,UAAkB,GAAG;oBAEjB,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,mBAAmB,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;oBAErD,uDAAuD;oBAEvD,yCAAyC;oBAC1C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,GAAG,CAAE;yBACtB,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;gBAC1C,CAAC;gBAED;;;;;;4EAM4D;gBAC5D,yCAAY,GAAZ,UAAa,QAAQ,EAAE,QAAQ;oBAE9B,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,eAAe,GAAG,QAAQ,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;oBAEvE,IAAI,KAAK,GAAG,aAAa,GAAG,QAAQ,GAAG,cAAc,GAAG,QAAQ,CAAC;oBACpE,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,OAAA,KAAK,EAAG,CAAC,CAAC;oBACnC,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;oBAClE,IAAI,OAAO,GAAG,IAAI,qBAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;oBAEpD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,OAAO,EAAE,GAAG,2BAA2B,GAAG,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;gBACjG,CAAC;gBAED,oCAAO,GAAP,UAAQ,QAAQ;oBAEf,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,UAAU,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;oBACjD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;gBACxF,CAAC;gBAED;;;;;;4EAM4D;gBAC5D,mCAAM,GAAN;oBAEC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,2BAA2B,CAAC,CAAC;gBACrE,CAAC;gBAED;;;;;;4EAM4D;gBAC5D,4CAAe,GAAf;oBAAA,iBAYC;oBAVA,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,mBAAmB,CAAC,CAAC;oBACzC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAEzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,gBAAgB,CAAC;yBAC3C,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;yBAChC,SAAS,CACP,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,YAAY,GAAG,IAAI,EAAxB,CAAwB,EAChC,UAAA,GAAG,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,EAAjD,CAAiD,EACxD,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC,EAA/D,CAA+D,CACpE,CAAC;gBACP,CAAC;gBAED;;;;;;;4EAOyD;gBACzD,6CAAgB,GAAhB,UAAiB,KAAK;oBAErB,IAAI,OAAO,GAAG,EAAE,CAAC;oBAEjB,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAC7C,CAAC;wBACA,EAAE,CAAC,CAAE,KAAK,KAAK,CAAE,CAAC,CAClB,CAAC;4BACA,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;4BACnC,MAAM,CAAC,OAAO,CAAC;wBAChB,CAAC;oBACF,CAAC;oBAED,MAAM,CAAC,OAAO,CAAC;gBAChB,CAAC;gBAKJ,oCAAO,GAAP,UAAQ,GAAG;oBACT,EAAE,CAAC,CAAE,GAAI,CAAC,CAAC,CAAC;wBACV,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;oBACxC,CAAC;gBACH,CAAC;gBAGD;;;;;;;;;;;;;;;;;;;;;;;;;mBAyBM;gBAGN;;;;;;;4EAO+D;gBAC/D,sCAAS,GAAT,UAAU,QAAQ,EAAE,UAAU;oBAE7B,OAAO,CAAC,GAAG,CAAC,8CAA8C,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;oBAC/E,IAAI,CAAC,GAAG,CAAC,CAAC;oBACV,IAAI,KAAK,GAAG,QAAQ,GAAG,CAAC,CAAC;oBACzB,IAAI,WAAW,GAAG,EAAE,CAAC;oBACrB,IAAI,GAAG,GAAU,KAAK,GAAI,UAAU,CAAC;oBAErC,8DAA8D;oBAC9D,EAAE,CAAC,CAAE,GAAG,CAAC,MAAM,GAAG,WAAY,CAAC,CAC/B,CAAC;wBACA,IAAI,IAAI,GAAG,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC;wBACpC,IAAI,GAAC,GAAG,CAAC,CAAC;wBACV,GAAG,CAAC,CAAE,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,IAAI,EAAE,GAAC,EAAE,EAC1B,CAAC;4BACA,GAAG,IAAI,GAAG,CAAC;wBACZ,CAAC;oBACF,CAAC;oBAED,iDAAiD;oBACjD,GAAG,CAAC,CAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAC3B,CAAC;wBACA,GAAG,IAAI,GAAG,CAAC;oBACZ,CAAC;oBAED,kCAAkC;oBAClC,GAAG,IAAI,IAAI,CAAC;oBAEZ,MAAM,CAAC,GAAG,CAAC;gBACZ,CAAC;gBAnzBF;oBAAC,iBAAU,EAAE;+BAyBO,aAAM,CAAC,WAAI,CAAC;;sCAzBnB;gBAozBb,yBAAC;YAAD,CAnzBA,AAmzBC,IAAA;YAnzBD,mDAmzBC,CAAA","file":"services/session-data.service.js","sourcesContent":["import { Component }      from '@angular/core';\nimport { Injectable }     from '@angular/core';\nimport { Inject }         from '@angular/core';\nimport { Http }           from '@angular/http';\nimport { Headers }        from '@angular/http';\nimport { RequestOptions } from '@angular/http';\n\nimport {Observable}       from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\n\nimport { LoggerService }  from '../services/logger.service';\nimport { ToolBox }        from '../utilities/toolbox';\nimport { User }           from '../dao/site-user';\nimport { ServerMode }     from '../dao/server-mode';\nimport { Team }           from '../dao/team';\nimport { Member }         from '../dao/member';\nimport { NewsStory }      from '../dao/news-story';\nimport { Sponsor }        from \"../dao/sponsor\";\n\n@Injectable()\nexport class SessionDataService {\n    \n\tdsAuthenticated:boolean;\n    modes = { LOCAL:0, REMOTE:1};\n    CurrentServerMode:number;\n    dsTeams : Array<Team>;\n    dsTeamMembers = [];\n    dsCurrentTeam:Team;\n    dsCurrentMember:Member;\n    dsCurrentUser:User;\n    // dsSessionPlans = [];\n    // dsTrainingRecords = [];\n    // dsTrainingPerMember = [];\n    dsAllMembers : Array<Member>;\n    dsNewsStories : Array<NewsStory>;\n    dsPosition : Array<string>;\n    dsSponsors : Array<Sponsor>;\n    \n    logdepth = 3;\n    loghdr = \"\";\n    serviceName = 'SessionDataService';\n    displayMember = false;\n    gAuthenticated = false;\n\n     constructor ( @Inject(Http) private lg$: LoggerService, private _http: Http ) {\n    \t this.loghdr = this.setLogHdr(this.logdepth, this.serviceName);\n        \n        var svr = new ServerMode();\n        this.CurrentServerMode = svr.getServerMode();\n        this.dsAuthenticated = false;\n        this.dsPosition = [ 'Manager', \n                            'Goalkeeper', \n                            'Full Back', \n                            'Center Half', \n                            'Mid Field', \n                            'CAM', \n                            'Winger', \n                            'Striker', \n                            'Chairman', \n                            'Secretary', \n                            'Treasurer', \n                            'PRO', \n                            'Committee'];\n        this.dsCurrentUser = new User();\n        this.dsCurrentTeam = new Team();\n        this.dsCurrentMember = new Member();\n        this.dsTeams = new Array<Team>();\n        //this.dsTeamMembers = new Array(500);\n        this.dsCurrentUser = new User();\n        this.dsAllMembers = new Array<Member>();\n        this.dsNewsStories = new Array<NewsStory>();\n        this.dsSponsors = new Array<Sponsor>();\n\n    }\n\n    /**********************************************************\n     * Name:\t\tsetCurrentMember()\n     * Description:\tSet the current member to the one passed in\n     * Scope:\t\tExternally accessible\n     * Params in:\tmember: the member in question\n     * Return:\t\t\n     **********************************************************/\n     setCurrentMember( member:Member )\n     {\n         console.log(\"-->\" + \"setCurrentMember()\");\n         this.dsCurrentMember = member;\n         this.displayMember = true;\n     }\n     \n    /**********************************************************\n     * Name:\t\thasPermission()\n     * Description:\tCheck the user's permission to perform the\n     * \t\t\t\tgiven action\n     * Scope:\t\tExternally accessible\n     * Params in:\taction: the action being requested\n     * Return:\t\ttrue or false depending on the permissions\n     **********************************************************/\n    hasPermission(action, params)\n    {\n        var team = '';\n        var allow = false;\n        var index = 0;\n\n        console.log(\"-->\" + \"hasPermission(\" + action + \",\" + params + \")\");\n\n        if ( typeof action === undefined || params === undefined )\n        {\n            return false;\n        }\n\n        for ( var r = 0; r < this.dsCurrentUser.roles.length; r++ )\n        {\n            if ( this.dsCurrentUser.roles[r] === \"ROLE_SUPER\" )\n            {\n                // Super user has permissions to do anything\n                //log.trace(loghdr + \" -> hasPermission(\"+action+\"): YES\");\n            \tconsole.log(\" -> hasPermission(\" + action + \"): YES\");\n                return true;\n            }\n        }\n        switch ( action )\n        {\n            case 'MANAGE_TEAM':\n                team = params;\n                // Check if the user is a manager of this team\n                for ( var i = 0; i < this.dsCurrentUser.permissions.teams.length; i++ )\n                {\n                    for ( var t = 0; t < this.dsTeams.length; t++ )\n                    {\n                        if (  this.dsTeams[t].id === this.dsCurrentUser.permissions.teams[i] )\n                        {\n                            index = t;\n                            break;\n                        }\n                    }\n\n                    if ( this.dsTeams[index].name === team )\n                    {\n                        if ( this.dsCurrentUser.permissions.positions[i] === 0 )\n                        {\n                            allow = true;\n                            break;\n                        }\n                    }\n                }\n                break;\n\n            case 'ADD_TEAM':\n            case 'EDIT_TEAM':\n                for ( var r = 0; r < this.dsCurrentUser.roles.length; r++ )\n                {\n                    if ( this.dsCurrentUser.roles[r] === \"ROLE_SUPER\" )\n                    {\n                        // Super user has permissions to do anything\n                        allow = true;\n                        break;\n                    } else if ( this.dsCurrentUser.roles[r] === \"ROLE_EDIT_TEAM\" )\n                    {\n                        allow = true;\n                        break;\n                    }\n                }\n                break;\n            case 'DEL_TEAM':\n                for ( var r = 0; r < this.dsCurrentUser.roles.length; r++ )\n                {\n                    if ( this.dsCurrentUser.roles[r] === \"ROLE_SUPER\" )\n                    {\n                        // Super user has permissions to do anything\n                        allow = true;\n                        break;\n                    } else if ( this.dsCurrentUser.roles[r] === \"ROLE_DEL_TEAM\" )\n                    {\n                        allow = true;\n                        break;\n                    }\n                }\n                break;\n\n            case 'ADD_USER':\n            case 'EDIT_USER':\n            case 'DELETE_USER':\n            case 'VIEW_USERS':\n                for ( var r = 0; r < this.dsCurrentUser.roles.length; r++ )\n                {\n                     if ( this.dsCurrentUser.roles[r] === \"ROLE_SUPER\" )\n                    {\n                        // Super user has permissions to do anything\n                        allow = true;\n                        break;\n                    }\n                }\n                break;\n        }\n\n        return allow;\n    }\n\n    /**********************************************************\n     * Name:\t\tdifference()\n     * Description:\tCheceks to see if there is a difference\n     *              between two objects\n     * Scope:\t\tInternal\n     * Params in:\tNone\n     * Return:\t\t\n     **********************************************************/\n    difference(m1, m2)\n    {\n\t    var diff = false;\n\t    Object.getOwnPropertyNames(m1).forEach(function(val, idx, array) {\n\t    \tif ( m1[val] !== m2[val] )\n\t    \t{\n\t    \t\t  diff = true;\n\t    \t}\n\t    });\n\n\t    return diff;\n\t}\n\n    /**********************************************************\n     * Name:\t\tapplyMemberChange()\n     * Description:\tApplies a change to the local data so the \n     *              user sees the change on the view.\n     * Scope:\t\tInternal\n     * Params in:\tNone\n     * Return:\t\t\n     **********************************************************/\n    applyMemberChange(members, member)\n\t{\n\t\tvar index:number = SessionDataService.findMemberIndex( members, member );\n\n\t\tif ( index === -1 )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tmembers[index].name = member.name;\n\t\tmembers[index].address = member.address;\n\t\tmembers[index].phone = member.phone;\n\t\tmembers[index].dob = member.dob;\n\t\tmembers[index].email = member.email;\n\t\tmembers[index].amount = member.amount;\n\t\tmembers[index].team = member.team;\n\t\tmembers[index].position = member.position;\n\t\tmembers[index].lid = member.lid;\n\t\tmembers[index].favteam = member.favteam;\n\t\tmembers[index].favplayer = member.favplayer;\n\t\tmembers[index].sappears = member.sappears;\n\t\tmembers[index].sassists = member.sassists;\n\t\tmembers[index].sgoals = member.sgoals;\n\t\tmembers[index].photo = member.photo;\n\t\tmembers[index].achievments = member.achievments;\n\t}\n\n    /**********************************************************\n     * Name:\t\tapplyMemberDel()\n     * Description:\tApplies a change to the local data so the \n     *              user sees the change on the view.\n     * Scope:\t\tInternal\n     * Params in:\tNone\n     * Return:\t\t\n     **********************************************************/\n    applyMemberDel( members, member )\n\t{\n\t\tvar index:number = SessionDataService.findMemberIndex( members, member );\n\n\t\tif ( index === -1 )\n\t\t{\n\t\t\treturn;\n\t\t} else if ( index > -1 ) \n\t\t{   // Delete the member at index\n\t\t    members.splice( index, 1 );\n\t\t}\n\t}\n\n    /**********************************************************\n     * Name:\t\tapplyMemberAdd()\n     * Description:\tApplies a change to the local data so the \n     *              user sees the change on the view.\n     * Scope:\t\tInternal\n     * Params in:\tNone\n     * Return:\t\t\n     **********************************************************/\n    applyMemberAdd( members, member )\n\t{\n\t\tif ( this.dsTeamMembers[member.team] === undefined )\n\t\t{\n\t\t\t//getMembers4team(member.team);\n\t\t}\n\n\t\tvar index = SessionDataService.findMemberIndex( this.dsTeamMembers[member.team], member );\n\n\t\tif ( index === -1 )\n\t\t{// Add the member if it doesn't exits\n\t\t    members[member.team].push( member );\n\t\t} else if ( index > -1 ) \n\t\t{\n\t\t\t//log.debug(loghdr + \"###### ERROR: applyMemberAdd - member not found!\");\n\t\t}\n\t}\n\n    /**********************************************************\n     * Name:\t\tapplyTeamChange()\n     * Description:\tApplies a change to the local data so the \n     *              user sees the change on the view.\n     * Scope:\t\tInternal\n     * Params in:\tNone\n     * Return:\t\t\n     **********************************************************/\n    applyTeamChange( teams, thisTeam )\n    {\n        var index:number = -1;\n\n        if ( this.dsTeams.length === 0 )\n        {\n            this.dsGetTeams();\n        }\n\n    \n        for ( var i = 0; i < this.dsTeams.length; i++ )\n        {\n            if ( this.dsTeams[i].id === thisTeam.id )\n            {\n                index = i;\n                break;\n            }\n        }\n\n        if ( index === -1 )\n        {\n            //log.debug(loghdr + \"###### ERROR: applyTeamChange - team not found!\");\n        } else if ( index > -1 ) \n        {\n            this.dsTeams[index] = thisTeam;\n            //log.debug(loghdr + \" -> applyTeamChange - team updated: \" + thisTeam.name );\n        }\n    }\n\n    /**********************************************************\n     * Name:\t\tfindMemberIndex()\n     * Description:\tFind a members index/position in the array\n     *              of members \n     * Scope:\t\tInternal\n     * Params in:\tNone\n     * Return:\t\tThe index value\n     **********************************************************/\n    static findMemberIndex( members, member )\n\t{\n\t\tvar index = -1;\n\t\t\n\t\tif ( typeof members !== undefined )\n\t\t{\n\t\t\tfor ( var i = 0; i < members.length; i++ )\n\t\t\t{\n\t\t\t\tif ( members[i].id === member.id )\n\t\t\t\t{\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n    /**********************************************************\n     * Name:\t\tconvertPosToInt()\n     * Description:\tConverts the position name to the integer \n     *              value\n     * Scope:\t\tInternal\n     * Params in:\tNone\n     * Return:\t\tThe position integer value\n     **********************************************************/\n    convertPosToInt( sPos )\n\t{\n\t\treturn this.dsPosition.indexOf(sPos);\n\t}\n\n    /**********************************************************\n     * Name:\t\tconvertTeamToInt()\n     * Description:\tConverts the team name to the integer value\n     * Scope:\t\tInternal\n     * Params in:\tNone\n     * Return:\t\tThe team integer value\n     **********************************************************/\n    convertTeamToInt( sTeam:string )\n\t{\n\t\tfor ( var i = 0; i < this.dsTeams.length; i++ )\n\t\t{\n\t\t\tif ( this.dsTeams[i].name === sTeam )\n\t\t\t{\n\t\t\t\treturn this.dsTeams[i].id;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n    /**********************************************************\n     * Name:\t\tsetCurrentTeamByName()\n     * Description:\tSet the current team in memory\n     * Scope:\t\tInternal\n     * Params in:\tTeam name as a string\n     * Return:\t\tNone\n     **********************************************************/\n    setCurrentTeamByName( teamName: string)\n    {\n    \tconsole.log(\"-->\" + \"setCurrentTeamByName(\" + teamName + \")\");\n\n        // Ensure the teams information has been loaded\n        if ( this.dsTeams.length < 1 )\n        {\n            this.dsGetTeams();\n        }\n\n        // Pick out this team and set it as the current one\n        for ( var team of this.dsTeams )\n        {\n            if ( team.name === teamName ) {\n                this.dsCurrentTeam = team;\n                console.log( \"-->\" + \"setCurrentTeamByName(): Team set to \" + teamName);\n                break;\n            }\n        }\n    }\n\n    /**********************************************************\n     * Name:\t\tloadNewsStories()\n     * Description:\tRetrieves a list of Newws from the server\n     * Scope:\t\tInternal\n     * Params in:\tNone\n     * Return:\t\tSets dsNewsStories\n     **********************************************************/\n    loadNewsStories()\n    {\n        console.log(\"-->\" + \"loadNewsStories()..\");\n        var url = this.getHome();\n\n        return this._http.get( url + '/stories' )\n            \t\t\t.map(response => response.json());\n            /*.subscribe(\n            \tdata => this.dsNewsStories = data,\n            \terror => this.handleError(error), //console.log(\"===> Error getting news from server: \" + error),\n            \t() => console.log(\" <=== Received news from server. <====\")\n            );*/\n     }\n\n    setNews( data )\n    {\n    \tconsole.log(\"->\" + \"setNews()...recieved news stories: \" + data);\n    \tthis.dsNewsStories = data;\n    }\n\n    private handleError( error: any ) {\n        // In a real world app, we might use a remote logging infrastructure\n        // We'd also dig deeper into the error to get a better message\n        let errMsg = ( error.message ) ? error.message :\n          error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        console.error(errMsg); // log to console instead\n        //return Observable.throw(errMsg);\n      }\n\n    /**********************************************************\n     * Name:\t\tgetHome()\n     * Description:\tReturns the _home URL so that it can be used\n     * \t\t\t\tas a local or remote app.\n     * Scope:\t\tExternally accessible\n     * Params in:\tnone\n     * Return:\t\t_home URL\n     **********************************************************/\n    getHome() : string\n    {\n        var _home:string;\n        //log.debug(loghdr + \"-> getHome()\");\n        if ( this.CurrentServerMode === this.modes.LOCAL )\n        {\n            //log.debug(loghdr + \"     | _home is LOCAL\");\n            _home = 'http://localhost:8080/clubRegisterApp';\n            //_home = 'http://localhost:3000/';\n        } else if ( this.CurrentServerMode === this.modes.REMOTE )\n        {\n        \t//log.debug(loghdr + \"     | _home is REMOTE\");\n            _home = 'http://www.avenueunited.ie';\n        }\n\n        return _home;\n    }\n\n    /**********************************************************\n     * Name:\t\tdsGetTeams()\n     * Description:\tRetrieves a list of teams from the server\n     * Scope:\t\tInternal\n     * Params in:\tNone\n     * Return:\t\tSets dsNewsStories\n     **********************************************************/\n    dsGetTeams()\n    {\n        console.log(\"-->\" + \" dsGetTeams()..\");\n        var url = this.getHome();\n        \n        return this._http.get( url + '/teams' )\n\t\t\t.map(response => response.json())\n\t\t\t.subscribe( data => this.dsSetTeams(data),\n\t\t\t\t\t\terr  => console.error(\"DataService: ERROR reading teams from server!\"),\n\t\t\t\t\t\t()   => console.log(\" <== Teams received from server <==\")\n\t\t\t\t\t);\n     }\n\n    /**********************************************************\n     * Name:\t\tdsSetTeams()\n     * Description:\tSet the current member to the one passed in\n     * Scope:\t\tExternally accessible\n     * Params in:\tmember: the member in question\n     * Return:\t\t\n     **********************************************************/\n    dsSetTeams( data )\n     {\n         console.log(\"-->\" + \"dsSetTeams()\");\n         this.dsTeams = data;\n     }\n\n    /**********************************************************\n     * Name:\t\tloadTeamDetailsByName()\n     * Description:\tLoad the current team's details\n     * Scope:\t\tExternally accessible\n     * Params in:\tteamName: the name of the team in question\n     * Return:\n     **********************************************************/\n    loadTeamDetailsByName( teamName:string )\n    {\n    \tconsole.log(\"-->\" + \"loadTeamDetailsByName(\" + teamName + \")\");\n\n\n        // Clear out the TeamMembers array first\n        this.dsCurrentTeam = null;\n        var url = this.getHome();\n\n        this._http.get( url + '/team/' + teamName )\n             .map(response => response.json())\n             .subscribe( data => this.dsCurrentTeam = data,\n   \t\t\t\t\terror => console.log(\"ERROR: Reading team details from server, team: \" + teamName),\n   \t\t\t\t\t() => console.log(\"Team details read successfully for team: \" + teamName)\n   \t\t\t\t  );\n\n    }\n    \n    /**********************************************************\n     * Name:\t\tloadTeamDetailsByNameByObservable()\n     * Description:\tLoad the current team's details, return an\n     * \t\t\t\tobservable to the caller\n     * Scope:\t\tExternally accessible\n     * Params in:\tteamName: the name of the team in question\n     * Return:\t\tAn observable\n     **********************************************************/\n    loadTeamDetailsByNameByObservable( teamName:string, indent: number )\n    {\n    \tvar prefix: string = '';\n    \n    \tfor ( var i = 0; i < (indent + 4); i++ )\n    \t{\n    \t\tprefix += ' ';\n    \t}\n        console.log(prefix + \"|-->\" + \"loadTeamDetailsByNameByObservable(\" + teamName + \")\");\n\n\n        // Clear out the TeamMembers array first\n        //this.dsCurrentTeam = null;\n        var url = this.getHome();\n\n        return this._http.get( url + '/team/' + teamName )\n             \t\t.map(response => response.json());\n\n    }\n    \n    /**********************************************************\n     * Name:\t\tloadCurrentTeamMembersByNameByObservable()\n     * Description:\tLoad the current team's members\n     * Scope:\t\tExternally accessible\n     * Params in:\tteamName: the name of the team in question\n     * Return:\t\tObservable\n     **********************************************************/\n    loadCurrentTeamMembersByNameByObservable( teamName: string, indent: number )\n    {\n    \tvar prefix: string = '';\n    \n    \tfor ( var i = 0; i < (indent + 4); i++ )\n    \t{\n    \t\tprefix += ' ';\n    \t}\n        console.log(prefix + \"|-->\" + \"loadCurrentTeamMembersByName(\" + teamName + \")\");\n\n       // Clear out the TeamMembers array first\n        this.dsTeamMembers.length = 0;\n        var url = this.getHome();\n\n       return this._http.get( url + '/teammembers/' + teamName )\n            \t.map(response => response.json());\n    }\n    \n    /**********************************************************\n     * Name:\t\tloadCurrentTeamMembersByName()\n     * Description:\tLoad the current team's details and members\n     * Scope:\t\tExternally accessible\n     * Params in:\tteamName: the name of the team in question\n     * Return:\n     **********************************************************/\n    loadCurrentTeamMembersByName( teamName:string )\n    {\n        console.log(\"-->\" + \"loadCurrentTeamMembersByName(\" + teamName + \")\");\n\n       if ( ( this.dsTeamMembers.length !== 0 ) && ( this.dsCurrentTeam.name === teamName ) )\n       {\n           console.log(\"-->\" + \"loadCurrentTeamByName():\" + \"Members already loaded not loading again!\");\n           return;\n       } else {\n           // Clear out the TeamMembers array first\n            this.dsTeamMembers.length = 0;\n            var url = this.getHome();\n\n           this._http.get( url + '/teammembers/' + teamName )\n                .map(response => response.json())\n                .subscribe( data => this.dsTeamMembers = data,\n\t   \t\t\t\t\terror => console.log(\"ERROR: Reading team members from server, team: \" + teamName),\n\t   \t\t\t\t\t() => console.log(\"<-- Team members read successfully for team: \" + teamName)\n\t   \t\t\t\t  );\n        }\n    }\n\n    /// TEMP FUNCTION TO SIM REST CALL TO SERVER\n    getTeamDetailsSim( teamName:string ) : Team {\n        return this.dsCurrentTeam; // = this._sds.getTeamDetailsByName(teamName);\n    }\n\n    /**********************************************************\n     * Name:\t\tloadCurrentSponsors()\n     * Description:\tLoad the current sponsors details\n     * Scope:\t\tExternally accessible\n     * Params in:\tNone\n     * Return:      Array of sponsor objects\n     **********************************************************/\n    loadCurrentSponsors() : Array<Sponsor>\n    {\n        console.log('-->' + 'loadCurrentSponsors()');\n\n        this.dsSponsors = [ {name:\"Enzo's Takeaway\", image:\"resources/images/adverts/enzos.png\"},\n                            {name:\"Rochford's Pharmacy\", image: \"resources/images/adverts/main-sponsor.png\"},\n                            {name:\"Ennis Cabs\", image: \"resources/images/adverts/ec.png\"}\n                        ];\n        return this.dsSponsors;\n    }\n\n    /**********************************************************\n     * Name:\t\tclearCurrentMember()\n     * Description:\tClear out the dsCurrentMember\n     * Scope:\t\tExternally accessible\n     * Params in:\tNone\n     * Return:      None\n     **********************************************************/\n    clearCurrentMember()\n    {\n        this.dsCurrentMember = null;\n    }\n\n    /**********************************************************\n     * Name:\t\tloadPhotoDetails()\n     * Description:\tRetrieves a list of photos from the server\n     * Scope:\t\tInternal\n     * Params in:\tNone\n     * Return:\t\tSets \n     **********************************************************/\n    loadPhotoDetails( url ) \n    {\n        console.log(\"-->\" + \"loadPhotoDetails(\" + url + \")\");\n\n        // ToDo: If we have already loaded the news just return\n\n        // Read the list of files from the server\n       return this._http.get( url )\n            .map(response => response.json());\n    }\n\n    /**********************************************************\n     * Name:\t\tauthenticate()\n     * Description:\tAuthenticates the user with the server\n     * Scope:\t\tInternal\n     * Params in:\t\n     * Return:\t\t \n     **********************************************************/    \n    authenticate(username, password) \n    {\n    \tconsole.log(\"-->\" + \"authenticate(\" + username + \",\" + password + \")\");\n\n    \tvar creds = \"j_username=\" + username + \"&j_password=\" + password;   \t\n\t\tlet body = JSON.stringify({ creds  });\n\t    let headers = new Headers({ 'Content-Type': 'application/json' });\n\t    let options = new RequestOptions({ headers: headers });\n\n        return this._http.post( this.getHome() + '/j_spring_security_check?' + creds, body, options);\n    }\n\n    getUser(username)\n    {\n    \tconsole.log(\"-->\" + \"getUser(\" + username + \")\");\n    \treturn this._http.get(this.getHome() + '/admin/user').map(response => response.json());\n    }\n\n    /**********************************************************\n     * Name:\t\tlogout()\n     * Description:\tInvalidates the user session with the server\n     * Scope:\t\tInternal\n     * Params in:\t\n     * Return:\t\t \n     **********************************************************/\n    logout()\n    {\n    \tthis.dsAuthenticated = false;\n    \treturn this._http.get(this.getHome() + '/j_spring_security_logout');\n    }\n\n    /**********************************************************\n     * Name:\t\tdsGetAllMembers()\n     * Description:\tGet all members from the server\n     * Scope:\t\tInternal\n     * Params in:\t\n     * Return:\t\t \n     **********************************************************/\n    dsGetAllMembers()\n    {\n    \tconsole.log(\"-->\" + \"dsGetAllMembers()\");\n    \tvar url = this.getHome();\n\n    \treturn this._http.get(url + \"/admin/members\")\n    \t\t.map(response => response.json())\n    \t\t.subscribe(\n    \t\t\t\t\tdata => this.dsAllMembers = data,\n    \t\t\t\t\terr => console.log(\"ERROR getting members from server!\"),\n    \t\t\t\t\t() => console.log(\"<== Finished getting all members from server <==\")\n    \t\t\t\t\t);\n    }\n\n    /**********************************************************\n\t * Name:\t\tgetTeamNameFrmId()\n\t * Description:\tConvert a team name to it's id\n\t * Scope:\t\tExternally accessible via the service\n\t * Params in:\tscope: The parents scope\n\t * \t\t\t\t\n\t * Return:\t\tThe team id\n\t **********************************************************/\n    getTeamNameFrmId(iTeam)\n    {\n    \tvar sTeamId = \"\";\n\n    \tfor ( var i = 0; i < this.dsTeams.length; i++ )\n    \t{\n    \t\tif ( iTeam === i )\n    \t\t{\n    \t\t\tsTeamId = this.dsTeams[i - 1].name;\n    \t\t\treturn sTeamId;\n    \t\t}\n    \t}\n\n    \treturn sTeamId;\n    } \n\n\n    \n\n\tsaveJwt(jwt) {\n\t  if ( jwt ) {\n\t    localStorage.setItem('id_token', jwt);\n\t  }\n\t}\n\n\n\t/*WriteCookie()\n    {\n       if( document.myform.customer.value == \"\" ){\n          alert(\"Enter some value!\");\n          return;\n       }\n       cookievalue= escape(document.myform.customer.value) + \";\";\n       document.cookie=\"name=\" + cookievalue;\n       document.write (\"Setting Cookies : \" + \"name=\" + cookievalue );\n    }\n\t\n\tReadCookie()\n    {\n       var allcookies = document.cookie;\n       document.write (\"All Cookies : \" + allcookies );\n       \n       // Get all the cookies pairs in an array\n       cookiearray = allcookies.split(';');\n       \n       // Now take key value pair out of this array\n       for(var i=0; i<cookiearray.length; i++){\n          name = cookiearray[i].split('=')[0];\n          value = cookiearray[i].split('=')[1];\n          document.write (\"Key is : \" + name + \" and Value is : \" + value);\n       }\n    }*/\n\n\n\t/**********************************************************\n     * Name:\t\tsetLogHdr()\n     * Description:\tSets up the correct indentation and header\n     * \t\t\t\tinformation for the log messages.\n     * Scope:\t\tInternal\n     * Params in:\t\n     * Return:\t\t \n     **********************************************************/\n\tsetLogHdr(logdepth, moduleName)\n\t{\n\t\tconsole.log(\"** [Logger Service] Setting log header for [\" + moduleName + \"]\");\n\t\tlet i = 0;\n\t\tlet depth = logdepth * 4;\n\t\tlet moduleSpace = 25;\n\t\tlet hdr:string = \"## \" +  moduleName;\n\n\t\t// Make sure the field width is the standard, pad if necessary\n\t\tif ( hdr.length < moduleSpace )\n\t\t{\n\t\t\tlet diff = moduleSpace - hdr.length;\n\t\t\tlet i = 0;\n\t\t\tfor ( i = 0; i < diff; i++ )\n\t\t\t{\n\t\t\t\thdr += ' ';\n\t\t\t}\n\t\t}\n\n\t\t// (1) Set the indentation according to the depth\n\t\tfor ( i = 0; i < depth; i++ )\n\t\t{\n\t\t\thdr += \" \";\n\t\t}\n\n\t\t// (2) Add on call stack indicator\n\t\thdr += \"|-\";\n\n\t\treturn hdr;\n\t}\n}"],"sourceRoot":"/source/"}