{"version":3,"sources":["services/logger.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAGA;gBAAA;gBA8CA,CAAC;gBA3CA,6BAAK,GAAL,UAAM,GAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnD,2BAAG,GAAH,UAAI,GAAQ,IAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnD,6BAAK,GAAL,UAAM,GAAQ,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrD,4BAAI,GAAJ,UAAK,GAAQ,IAAK,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBAEpD;;;;;;;4EAO+D;gBAC/D,iCAAS,GAAT,UAAU,QAAQ,EAAE,UAAU;oBAE7B,OAAO,CAAC,GAAG,CAAC,8CAA8C,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;oBAC/E,IAAI,CAAC,GAAG,CAAC,CAAC;oBACV,IAAI,KAAK,GAAG,QAAQ,GAAG,CAAC,CAAC;oBACzB,IAAI,WAAW,GAAG,EAAE,CAAC;oBACrB,IAAI,GAAG,GAAU,GAAG,CAAC,CAAC,iBAAiB;oBAEvC,8DAA8D;oBAChE,mCAAmC;oBACnC,KAAK;oBACL,yCAAyC;oBACzC,eAAe;oBACf,iCAAiC;oBACjC,MAAM;oBACN,iBAAiB;oBACjB,MAAM;oBACN,KAAK;oBAEH,iDAAiD;oBACjD,GAAG,CAAC,CAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAC3B,CAAC;wBACA,GAAG,IAAI,GAAG,CAAC;oBACZ,CAAC;oBAED,kCAAkC;oBAClC,GAAG,IAAI,IAAI,CAAC;oBAEZ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;gBACnB,CAAC;gBA9CF;oBAAC,iBAAU,EAAE;;iCAAA;gBA+Cb,oBAAC;YAAD,CA9CA,AA8CC,IAAA;YA9CD,yCA8CC,CAAA","file":"services/logger.service.js","sourcesContent":["import { Injectable }     from '@angular/core';\n\n@Injectable()\nexport class LoggerService {\n\tloghdr:string; // The header for this instance, to be used in each log message\n\n\ttrace(msg: any) { console.log(this.loghdr + msg); }\n\tlog(msg: any)   { console.log(this.loghdr + msg); }\n\terror(msg: any) { console.error(this.loghdr + msg); }\n\twarn(msg: any)  { console.warn(this.loghdr + msg); }\n\t\n\t/**********************************************************\n     * Name:\t\tsetLogHdr()\n     * Description:\tSets up the correct indentation and header\n     * \t\t\t\tinformation for the log messages.\n     * Scope:\t\tInternal\n     * Params in:\t\n     * Return:\t\t \n     **********************************************************/\n\tsetLogHdr(logdepth, moduleName)\n\t{\n\t\tconsole.log(\"** [Logger Service] Setting log header for [\" + moduleName + \"]\");\n\t\tlet i = 0;\n\t\tlet depth = logdepth * 4;\n\t\tlet moduleSpace = 25;\n\t\tlet hdr:string = \" \"; // +  moduleName;\n\t\t\n\t\t// Make sure the field width is the standard, pad if necessary\n//\t\tif ( hdr.length < moduleSpace )\n//\t\t{\n//\t\t\tlet diff = moduleSpace - hdr.length;\n//\t\t\tlet i = 0;\n//\t\t\tfor ( i = 0; i < diff; i++ )\n//\t\t\t{\n//\t\t\t\thdr += ' ';\n//\t\t\t}\n//\t\t}\n\t\n\t\t// (1) Set the indentation according to the depth\n\t\tfor ( i = 0; i < depth; i++ )\n\t\t{\n\t\t\thdr += \" \";\n\t\t}\n\t\t\n\t\t// (2) Add on call stack indicator\n\t\thdr += \"|-\";\n\t\t\n\t\tthis.loghdr = hdr;\n\t}\n}"],"sourceRoot":"/source/"}